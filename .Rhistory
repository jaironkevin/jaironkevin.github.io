library(forecast)
library(ggplot2)
# Mostrar los directorios de bibliotecas
.libPaths()
library(lattice)
library(reticulate)
.libPaths
.libPaths()
packrat::libPaths()
packrat::libPaths()
library(forecast)
renv::status()
#| fig-cap: "Esta es la primera imagen"
#| out-width: "8cm"
#| fig-align: "center"
#| label: fig-plot4
knitr::include_graphics("1.1.png")
library(knitr)
install.packages("knitr")
#| fig-cap: "Esta es la primera imagen"
#| out-width: "8cm"
#| fig-align: "center"
#| label: fig-plot4
knitr::include_graphics("1.1.png")
.libPaths()
renv::status()
renv::restore()
renv::status()
renv::restore()
install.packages("installr")
installr::install.Rtools()
use warnings()
warnings()
Sys.which("gcc")
library(rmarkdown)
install.packages("rmarkdown")
renv::restore()
renv::init()
install.packages()
quarto::render()
install.packages("yaml")
.rs.restartR()
renv::status()
renv::snapshot()
.rs.restartR()
.rs.restartR()
set.seed(123)  # Para reproducibilidad
canales <- c("Redes Sociales", "Email", "TV", "Búsqueda", "Display")
conversiones <- round(runif(5, min = 100, max = 1000))  # Conversiones simuladas
costo_por_conversion <- round(runif(5, min = 10, max = 50), 2)  # Costo por conversión
ROI <- (conversiones * 100) / (costo_por_conversion * conversiones)  # ROI simulado
# Crear un dataframe
datos_marketing <- data.frame(
Canal = canales,
Conversiones = conversiones,
Costo_Por_Conversion = costo_por_conversion,
ROI = ROI
)
# Mostrar los datos simulados
print(datos_marketing)
# Gráfico de barras: Conversiones por canal
ggplot(datos_marketing, aes(x = Canal, y = Conversiones, fill = Canal)) +
geom_bar(stat = "identity") +
labs(
title = "Conversiones por Canal de Marketing",
x = "Canal",
y = "Número de Conversiones",
fill = "Canal"
) +
theme_minimal()
# Cargar librerías necesarias
library(ggplot2)
install.packages("ggplot2")
# Gráfico de barras: Conversiones por canal
ggplot(datos_marketing, aes(x = Canal, y = Conversiones, fill = Canal)) +
geom_bar(stat = "identity") +
labs(
title = "Conversiones por Canal de Marketing",
x = "Canal",
y = "Número de Conversiones",
fill = "Canal"
) +
theme_minimal()
# Cargar librerías necesarias
library(ggplot2)
# Gráfico de barras: Conversiones por canal
ggplot(datos_marketing, aes(x = Canal, y = Conversiones, fill = Canal)) +
geom_bar(stat = "identity") +
labs(
title = "Conversiones por Canal de Marketing",
x = "Canal",
y = "Número de Conversiones",
fill = "Canal"
) +
theme_minimal()
# Gráfico de líneas: ROI por canal
ggplot(datos_marketing, aes(x = Canal, y = ROI, group = 1)) +
geom_line(color = "blue", size = 1.2) +
geom_point(color = "red", size = 3) +
labs(
title = "ROI por Canal de Marketing",
x = "Canal",
y = "ROI (%)"
) +
theme_minimal()
